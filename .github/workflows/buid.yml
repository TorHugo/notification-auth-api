name: Auth-Service-API Pipeline

on:
  push:
    branches:
      - develop
    paths-ignore:
      - '.gitignore'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar
          gradle-home-cache-cleanup: true

  deployment:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'adopt'
          cache: gradle

      - name: Build to docker
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar
          gradle-home-cache-cleanup: true

      - name: Get current version
        id: current_version
        run: |
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          echo "Current tag: $CURRENT_TAG"
          echo "CURRENT_VERSION=${CURRENT_TAG#v}" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        uses: mathieudutour/github-tag-action@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          create_annotated_tag: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: torhugo/auth-service-api:${{ steps.increment_version.outputs.new_tag }}

      - name: Push new tag
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag ${{ steps.increment_version.outputs.new_tag }}
          git push origin ${{ steps.increment_version.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
